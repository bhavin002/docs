{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.hobbo.ai"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/public/v1/email-generator": {
      "post": {
        "description": "Generate professional email content automatically for welcome emails, notifications, and communications.",
        "requestBody": {
          "description": "Email generation parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailGeneratorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email content generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailGeneratorResponse"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": 200,
                      "data": {},
                      "success": false,
                      "message": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": 400,
                      "data": {},
                      "success": false,
                      "message": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/sentiment": {
      "post": {
        "description": "Analyze text sentiment (positive, negative, or neutral) for feedback and social monitoring.",
        "requestBody": {
          "description": "Sentiment analysis parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SentimentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sentiment analyzed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentimentResponse"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": 200,
                      "data": {},
                      "success": false,
                      "message": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": 400,
                      "data": {},
                      "success": false,
                      "message": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmailGeneratorRequest": {
        "type": "object",
        "required": ["type", "product"],
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of email"
          },
          "product": {
            "type": "string",
            "description": "The product associated with the email"
          },
          "meta_data": {
            "type": "object",
            "description": "An object containing dynamic meta_data"
          }
        }
      },
      "EmailGeneratorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "data": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Generated email subject"
              },
              "body": {
                "type": "string",
                "description": "Generated email body content"
              }
            }
          },
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "data": {
            "type": "object",
            "description": "Empty object or additional error data"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates operation failed",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        }
      },
      "SentimentRequest": {
        "type": "object",
        "required": ["sentence"],
        "properties": {
          "sentence": {
            "type": "string",
            "description": "The text to analyze for sentiment"
          }
        }
      },
      "SentimentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "sentiment": {
            "type": "number",
            "description": "Sentiment score"
          },
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
